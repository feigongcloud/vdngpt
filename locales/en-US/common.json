{
  "ModelSelect": {
    "featureTag": {
      "custom": "Custom model, by default, supports both function call and visual recognition. Please verify the availability of the above capabilities based on actual situations.",
      "file": "This model supports file upload for reading and recognition",
      "functionCall": "This model supports function call.",
      "tokens": "This model supports a maximum of {{tokens}} tokens per session.",
      "vision": "This model supports visual recognition."
    }
  },
  "about": "About",
  "logout":"Logout",
  "advanceSettings": "Advanced Settings",
  "agentMaxToken": "Max Session Length",
  "agentModel": "Model",
  "agentProfile": "Agent Profile",
  "appInitializing": "LobeChat is initializing, please wait...",
  "archive": "Archive",
  "autoGenerate": "Auto Generate",
  "autoGenerateTooltip": "Auto-generate agent description based on prompts",
  "cancel": "Cancel",
  "changelog": "Changelog",
  "close": "Close",
  "confirmRemoveSessionItemAlert": "You are about to delete this agent. Once deleted, it cannot be recovered. Please confirm your action.",
  "copy": "Copy",
  "copyFail": "Copy failed",
  "copySuccess": "Copied successfully",
  "defaultAgent": "Default Agent",
  "defaultSession": "Default Agent",
  "delete": "Delete",
  "document": "User Manual",
  "duplicate": "Create Duplicate",
  "edit": "Edit",
  "export": "Export Configuration",
  "exportType": {
    "agent": "Export Agent Settings",
    "agentWithMessage": "Export Agent and Messages",
    "all": "Export Global Settings and All Agent Data",
    "allAgent": "Export All Agent Settings",
    "allAgentWithMessage": "Export All Agents and Messages",
    "globalSetting": "Export Global Settings"
  },
  "feedback": "Feedback",
  "historyRange": "History Range",
  "import": "Import Configuration",
  "importModal": {
    "finish": {
      "onlySettings": "System settings imported successfully",
      "start": "Start using",
      "subTitle": "Data imported successfully, took {{duration}} seconds. Import details are as follows:",
      "title": "Data import completed"
    },
    "loading": "Data importing, please wait...",
    "result": {
      "added": "Imported successfully",
      "errors": "Import errors",
      "messages": "Messages",
      "sessionGroups": "Groups",
      "sessions": "Agents",
      "skips": "Duplicates skipped",
      "topics": "Topics",
      "type": "Data Type"
    },
    "title": "Import Data"
  },
  "lang": {
    "ar": "Arabic",
    "bn": "Bengali",
    "cs-CZ": "Czech",
    "da-DK": "Danish",
    "de-DE": "German",
    "el-GR": "Greek",
    "en": "English",
    "en-US": "English",
    "es-ES": "Spanish",
    "fi-FI": "Finnish",
    "fr-FR": "French",
    "hi-IN": "Hindi",
    "hu-HU": "Hungarian",
    "id-ID": "Indonesian",
    "it-IT": "Italian",
    "ja-JP": "Japanese",
    "ko-KR": "Korean",
    "nl-NL": "Dutch",
    "no-NO": "Norwegian",
    "pl-PL": "Polish",
    "pt-BR": "Portuguese",
    "pt-PT": "Portuguese",
    "ro-RO": "Romanian",
    "ru-RU": "Russian",
    "sk-SK": "Slovak",
    "sr-RS": "Serbian",
    "sv-SE": "Swedish",
    "th-TH": "Thai",
    "tr-TR": "Turkish",
    "uk-UA": "Ukrainian",
    "vi-VN": "Vietnamese",
    "zh": "Simplified Chinese",
    "zh-CN": "Simplified Chinese",
    "zh-TW": "Traditional Chinese"
  },
  "layoutInitializing": "Initializing layout...",
  "modelProvider": {
    "azure": "Azure",
    "bedrock": "AWS Bedrock",
    "google": "Google",
    "moonshot": "Moonshot AI",
    "ollama": "Ollama",
    "oneapi": "One API",
    "openai": "OpenAI",
    "perplexity": "Perplexity",
    "zhipu": "Zhipu AI"
  },
  "noDescription": "No description available",
  "oauth": "SSO Login",
  "ok": "OK",
  "password": "Password",
  "pin": "Pin",
  "pinOff": "Unpin",
  "regenerate": "Regenerate",
  "rename": "Rename",
  "reset": "Reset",
  "retry": "Retry",
  "send": "Send",
  "setting": "Settings",
  "share": "Share",
  "stop": "Stop",
  "tab": {
    "chat": "Chat",
    "market": "Discover",
    "setting": "Settings"
  },
  "temp": "Temporary",
  "updateAgent": "Update Agent Information",
  "upgradeVersion": {
    "action": "Upgrade",
    "hasNew": "New update available",
    "newVersion": "New version available: {{version}}"
  }
}
